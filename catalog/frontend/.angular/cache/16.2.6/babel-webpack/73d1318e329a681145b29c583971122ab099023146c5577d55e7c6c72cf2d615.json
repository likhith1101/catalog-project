{"ast":null,"code":"import { Employee } from '../employee';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class UpdateEmployeeComponent {\n  constructor(employeeService, route, router) {\n    this.employeeService = employeeService;\n    this.route = route;\n    this.router = router;\n    this.employee = new Employee();\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n  onSubmit() {\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe(data => {\n      this.goToEmployeeList();\n    }, error => console.log(error));\n  }\n  goToEmployeeList() {\n    this.router.navigate(['/employees']);\n  }\n  static #_ = this.ɵfac = function UpdateEmployeeComponent_Factory(t) {\n    return new (t || UpdateEmployeeComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateEmployeeComponent,\n    selectors: [[\"app-update-employee\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[1, \"col-md-6\", \"offset-md-3\"], [1, \"simple-form\", 3, \"submit\"], [1, \"form-group\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"emailId\"], [\"type\", \"text\", \"id\", \"emailId\", \"name\", \"emailId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"submit-button\"]],\n    template: function UpdateEmployeeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n        i0.ɵɵtext(2, \"Update Employee\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function UpdateEmployeeComponent_Template_form_submit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.employee.firstName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.employee.lastName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Email Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function UpdateEmployeeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.employee.emailId = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.firstName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.lastName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.employee.emailId);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".simple-form[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-top: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n    margin: 10px 0;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    display: block;\\n    font-weight: bold;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 5px;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    font-size: 16px;\\n}\\n\\n.submit-button[_ngcontent-%COMP%] {\\n    background-color: #4CAF50;\\n    color: white;\\n    border: none;\\n    border-radius: 4px;\\n    padding: 10px 20px;\\n    text-align: center;\\n    text-decoration: none;\\n    display: inline-block;\\n    font-size: 16px;\\n    margin: 10px 0;\\n    cursor: pointer;\\n}\\n\\n.submit-button[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXBkYXRlLWVtcGxveWVlL3VwZGF0ZS1lbXBsb3llZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZixjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIi5zaW1wbGUtZm9ybSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgICBtYXJnaW46IDEwcHggMDtcbn1cblxubGFiZWwge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uZm9ybS1jb250cm9sIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBwYWRkaW5nOiA1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xufVxuXG4uc3VibWl0LWJ1dHRvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIG1hcmdpbjogMTBweCAwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLnN1Ym1pdC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Employee","UpdateEmployeeComponent","constructor","employeeService","route","router","employee","ngOnInit","id","snapshot","params","getEmployeeById","subscribe","data","error","console","log","onSubmit","updateEmployee","goToEmployeeList","navigate","_","i0","ɵɵdirectiveInject","i1","EmployeeService","i2","ActivatedRoute","Router","_2","selectors","decls","vars","consts","template","UpdateEmployeeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateEmployeeComponent_Template_form_submit_3_listener","UpdateEmployeeComponent_Template_input_ngModelChange_7_listener","$event","firstName","UpdateEmployeeComponent_Template_input_ngModelChange_11_listener","lastName","UpdateEmployeeComponent_Template_input_ngModelChange_15_listener","emailId","ɵɵadvance","ɵɵproperty"],"sources":["/home/likhith/cycle_chirag/New Cycle Shop/frontend/src/app/update-employee/update-employee.component.ts","/home/likhith/cycle_chirag/New Cycle Shop/frontend/src/app/update-employee/update-employee.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee = new Employee();\n  constructor(private employeeService: EmployeeService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params['id'];\n\n    this.employeeService.getEmployeeById(this.id).subscribe(data => {\n      this.employee = data;\n    }, error => console.log(error));\n  }\n\n  onSubmit(){\n    this.employeeService.updateEmployee(this.id, this.employee).subscribe( data =>{\n      this.goToEmployeeList();\n    }\n    , error => console.log(error));\n  }\n\n  goToEmployeeList(){\n    this.router.navigate(['/employees']);\n  }\n}\n","<div class=\"col-md-6 offset-md-3\">\n    <h3>Update Employee</h3>\n    <form (submit)=\"onSubmit()\" class=\"simple-form\">\n        <div class=\"form-group\">\n            <label for=\"firstName\">First Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"firstName\" [(ngModel)]=\"employee.firstName\" name=\"firstName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"lastName\">Last Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"lastName\" [(ngModel)]=\"employee.lastName\" name=\"lastName\">\n        </div>\n\n        <div class=\"form-group\">\n            <label for=\"emailId\">Email Id</label>\n            <input type=\"text\" class=\"form-control\" id=\"emailId\" [(ngModel)]=\"employee.emailId\" name=\"emailId\">\n        </div>\n\n        <button class=\"submit-button\" type=\"submit\">Submit</button>\n    </form>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}